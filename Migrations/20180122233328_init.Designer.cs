// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using supermasks.Models;
using System;

namespace supermasks.Migrations
{
    [DbContext(typeof(fantasyfaceContext))]
    [Migration("20180122233328_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("supermasks.Models.AgentMaster", b =>
                {
                    b.Property<long>("Agentid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("agentid");

                    b.Property<string>("Address")
                        .HasColumnName("address")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Country")
                        .HasColumnName("country")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Fname")
                        .HasColumnName("fname")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Lname")
                        .HasColumnName("lname")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Password")
                        .HasColumnName("password")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Pcode")
                        .HasColumnName("pcode")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Phone")
                        .HasColumnName("phone")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<double?>("Share")
                        .HasColumnName("share");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Street")
                        .HasColumnName("street")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Title")
                        .HasColumnName("title")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Town")
                        .HasColumnName("town")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Vat")
                        .HasColumnName("vat")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Agentid");

                    b.ToTable("agent_master");
                });

            modelBuilder.Entity("supermasks.Models.ApiDetails", b =>
                {
                    b.Property<long>("Apiid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("apiid");

                    b.Property<string>("Apikey")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("apikey")
                        .HasDefaultValueSql("(newid())")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<long?>("Userid")
                        .HasColumnName("userid");

                    b.HasKey("Apiid");

                    b.ToTable("api_details");
                });

            modelBuilder.Entity("supermasks.Models.AppMaster", b =>
                {
                    b.Property<long>("Appid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("appid");

                    b.Property<string>("Appcode")
                        .HasColumnName("appcode")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Appid");

                    b.ToTable("app_master");
                });

            modelBuilder.Entity("supermasks.Models.Baskets", b =>
                {
                    b.Property<long>("Basketid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("basketid");

                    b.Property<long?>("Basketstatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("basketstatus")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Bsession")
                        .HasColumnName("bsession")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<long?>("Custid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("custid")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<byte?>("Isvat")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isvat")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Lpage")
                        .HasColumnName("lpage")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Orderid")
                        .HasColumnName("orderid")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<decimal?>("Price")
                        .HasColumnName("price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<long?>("Prodid")
                        .HasColumnName("prodid");

                    b.Property<long?>("Qty")
                        .HasColumnName("qty");

                    b.Property<long?>("Siteid")
                        .HasColumnName("siteid");

                    b.Property<long?>("Sizeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sizeid")
                        .HasDefaultValueSql("((1000000))");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Basketid");

                    b.HasIndex("Bsession")
                        .HasName("ph_session");

                    b.HasIndex("Orderid")
                        .HasName("pk_orderid");

                    b.HasIndex("Prodid")
                        .HasName("pk_bas_prodid");

                    b.ToTable("baskets");
                });

            modelBuilder.Entity("supermasks.Models.BstatusMaster", b =>
                {
                    b.Property<long>("Statusid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("statusid");

                    b.Property<string>("Status")
                        .HasColumnName("status")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Statusid");

                    b.ToTable("bstatus_master");
                });

            modelBuilder.Entity("supermasks.Models.CatsImages", b =>
                {
                    b.Property<long>("Catimageid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("catimageid");

                    b.Property<long?>("Catcode")
                        .HasColumnName("catcode");

                    b.Property<string>("Catimg")
                        .HasColumnName("catimg")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Headimg")
                        .HasColumnName("headimg")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Menuimg")
                        .HasColumnName("menuimg")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<long?>("Siteid")
                        .HasColumnName("siteid");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Catimageid");

                    b.HasIndex("Catcode")
                        .HasName("pk_ci_catcode");

                    b.HasIndex("Siteid")
                        .HasName("pk_siteid_img");

                    b.ToTable("cats_images");
                });

            modelBuilder.Entity("supermasks.Models.CatsMaster", b =>
                {
                    b.Property<long>("Catid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("catid");

                    b.Property<string>("Arsc")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("arsc")
                        .HasDefaultValueSql("('Fancy Dress')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Code")
                        .HasColumnName("code");

                    b.Property<int?>("Corder")
                        .HasColumnName("corder");

                    b.Property<byte?>("Islens")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("islens")
                        .HasDefaultValueSql("((0))");

                    b.Property<byte?>("Ismain")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ismain")
                        .HasDefaultValueSql("((0))");

                    b.Property<byte?>("Issale")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("issale")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Keywords")
                        .HasColumnName("keywords")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Longname")
                        .HasColumnName("longname")
                        .HasMaxLength(154)
                        .IsUnicode(false);

                    b.Property<long?>("Maincatid")
                        .HasColumnName("maincatid");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal?>("Onweb")
                        .HasColumnName("onweb")
                        .HasColumnType("numeric(3, 0)");

                    b.Property<int?>("Parentcode")
                        .HasColumnName("parentcode");

                    b.Property<decimal?>("Pc")
                        .HasColumnName("pc")
                        .HasColumnType("numeric(3, 0)");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Url")
                        .HasColumnName("url")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Catid");

                    b.HasIndex("Code")
                        .HasName("pk_code");

                    b.HasIndex("Parentcode")
                        .HasName("pk_parentcode");

                    b.HasIndex("Url")
                        .HasName("pk_cm_url");

                    b.ToTable("cats_master");
                });

            modelBuilder.Entity("supermasks.Models.CatsProducts", b =>
                {
                    b.Property<long>("Catindexid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("catindexid");

                    b.Property<long?>("Catcode")
                        .HasColumnName("catcode");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("Ismain")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ismain")
                        .HasDefaultValueSql("((0))");

                    b.Property<long?>("Prodid")
                        .HasColumnName("prodid");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Catindexid");

                    b.HasIndex("Catcode")
                        .HasName("pk_cp_catcode");

                    b.HasIndex("Ismain")
                        .HasName("pk_ismain");

                    b.HasIndex("Prodid")
                        .HasName("pk_cp_prodid");

                    b.ToTable("cats_products");
                });

            modelBuilder.Entity("supermasks.Models.ColorMaster", b =>
                {
                    b.Property<long>("Colorid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("colorid");

                    b.Property<string>("Class")
                        .HasColumnName("class")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Color")
                        .HasColumnName("color")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Colorid");

                    b.ToTable("color_master");
                });

            modelBuilder.Entity("supermasks.Models.ColorProducts", b =>
                {
                    b.Property<long>("Colorindexid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("colorindexid");

                    b.Property<long?>("Colorid")
                        .HasColumnName("colorid");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("Prodid")
                        .HasColumnName("prodid");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Colorindexid");

                    b.ToTable("color_products");
                });

            modelBuilder.Entity("supermasks.Models.ConfirmDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Authcode")
                        .HasColumnName("authcode")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Md5hash")
                        .HasColumnName("MD5HASH")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("Message")
                        .HasColumnName("message")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Orderid")
                        .HasColumnName("orderid")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Result")
                        .HasColumnName("result")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Timestamp")
                        .HasColumnName("timestamp")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("confirm_details");
                });

            modelBuilder.Entity("supermasks.Models.CurrencyDetails", b =>
                {
                    b.Property<long>("Cdid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cdid");

                    b.Property<long?>("Cid")
                        .HasColumnName("cid");

                    b.Property<long?>("Empid")
                        .HasColumnName("empid");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal?>("Rate")
                        .HasColumnName("rate");

                    b.Property<decimal?>("Rrate")
                        .HasColumnName("rrate");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Cdid");

                    b.ToTable("currency_details");
                });

            modelBuilder.Entity("supermasks.Models.CurrencyMaster", b =>
                {
                    b.Property<long>("Cid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cid");

                    b.Property<string>("Ccode")
                        .HasColumnName("ccode")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("Cname")
                        .HasColumnName("cname")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<long?>("Corder")
                        .HasColumnName("corder");

                    b.Property<string>("Ctcode")
                        .HasColumnName("ctcode")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Cid");

                    b.ToTable("currency_master");
                });

            modelBuilder.Entity("supermasks.Models.CustomerMaster", b =>
                {
                    b.Property<long>("Custid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("custid");

                    b.Property<string>("Agent")
                        .HasColumnName("agent")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<long?>("Agentid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("agentid")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Cfname")
                        .HasColumnName("cfname")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Clname")
                        .HasColumnName("clname")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Cname")
                        .HasColumnName("cname")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Country")
                        .HasColumnName("country")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("County")
                        .HasColumnName("county")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Customerno")
                        .HasColumnName("customerno")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Dcountry")
                        .HasColumnName("dcountry")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Dcounty")
                        .HasColumnName("dcounty")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Dhno")
                        .HasColumnName("dhno")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<double?>("Discount")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("discount")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Dpcode")
                        .HasColumnName("dpcode")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Dstreet")
                        .HasColumnName("dstreet")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Dtown")
                        .HasColumnName("dtown")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Fax")
                        .HasColumnName("fax")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Hno")
                        .HasColumnName("hno")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<byte?>("Isdel")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isdel")
                        .HasDefaultValueSql("((0))");

                    b.Property<byte?>("Isvat")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isvat")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Password")
                        .HasColumnName("password")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Pcode")
                        .HasColumnName("pcode")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Phone")
                        .HasColumnName("phone")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Street")
                        .HasColumnName("street")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Title")
                        .HasColumnName("title")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Town")
                        .HasColumnName("town")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Vat")
                        .HasColumnName("vat")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Custid");

                    b.ToTable("customer_master");
                });

            modelBuilder.Entity("supermasks.Models.DiscountCodes", b =>
                {
                    b.Property<long>("Dcid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dcid");

                    b.Property<string>("Dccode")
                        .HasColumnName("dccode")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<float?>("Discount")
                        .HasColumnName("discount");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Dcid");

                    b.ToTable("discount_codes");
                });

            modelBuilder.Entity("supermasks.Models.DiscountDetails", b =>
                {
                    b.Property<long>("Discountid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("discountid");

                    b.Property<long?>("Catid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("catid")
                        .HasDefaultValueSql("((0))");

                    b.Property<long?>("Discount")
                        .HasColumnName("discount");

                    b.Property<DateTime?>("Edate")
                        .HasColumnName("edate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("Sdate")
                        .HasColumnName("sdate")
                        .HasColumnType("datetime");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Discountid");

                    b.ToTable("discount_details");
                });

            modelBuilder.Entity("supermasks.Models.DmessageMaster", b =>
                {
                    b.Property<long>("Msgid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("msgid");

                    b.Property<DateTime?>("Enddate")
                        .HasColumnName("enddate")
                        .HasColumnType("datetime");

                    b.Property<string>("Msg")
                        .HasColumnName("msg")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<long?>("Siteid")
                        .HasColumnName("siteid");

                    b.Property<DateTime?>("Startdate")
                        .HasColumnName("startdate")
                        .HasColumnType("datetime");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Msgid");

                    b.HasIndex("Siteid")
                        .HasName("pk_siteid");

                    b.ToTable("dmessage_master");
                });

            modelBuilder.Entity("supermasks.Models.DtypeMaster", b =>
                {
                    b.Property<long>("Dtypeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dtypeid");

                    b.Property<string>("Dtype")
                        .HasColumnName("dtype")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Dtypeid");

                    b.ToTable("dtype_master");
                });

            modelBuilder.Entity("supermasks.Models.ErrorLog", b =>
                {
                    b.Property<long>("Logid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("logid");

                    b.Property<string>("Appcode")
                        .HasColumnName("appcode")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Logval")
                        .HasColumnName("logval")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("Mfunction")
                        .HasColumnName("mfunction")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<long?>("Moduleid")
                        .HasColumnName("moduleid");

                    b.Property<long?>("Userid")
                        .HasColumnName("userid");

                    b.HasKey("Logid");

                    b.ToTable("error_log");
                });

            modelBuilder.Entity("supermasks.Models.EuDetails", b =>
                {
                    b.Property<long>("Euid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("euid");

                    b.Property<string>("Eucode")
                        .HasColumnName("eucode")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Euid");

                    b.ToTable("EU_details");
                });

            modelBuilder.Entity("supermasks.Models.Ftpimages", b =>
                {
                    b.Property<long>("Imgid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("imgid");

                    b.Property<string>("Img")
                        .HasColumnName("img")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<long?>("Prodid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("prodid")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Imgid");

                    b.ToTable("ftpimages");
                });

            modelBuilder.Entity("supermasks.Models.FunctionComments", b =>
                {
                    b.Property<long>("Fcid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("fcid");

                    b.Property<string>("Comment")
                        .HasColumnName("comment")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("Prodid")
                        .HasColumnName("prodid");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<long?>("Userid")
                        .HasColumnName("userid");

                    b.HasKey("Fcid");

                    b.ToTable("function_comments");
                });

            modelBuilder.Entity("supermasks.Models.GenderMaster", b =>
                {
                    b.Property<long>("Genderid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("genderid");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Gender")
                        .HasColumnName("gender")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Genderid");

                    b.ToTable("gender_master");
                });

            modelBuilder.Entity("supermasks.Models.GenderProducts", b =>
                {
                    b.Property<long>("Genindexid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("genindexid");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("Genderid")
                        .HasColumnName("genderid");

                    b.Property<long?>("Prodid")
                        .HasColumnName("prodid");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Genindexid");

                    b.ToTable("gender_products");
                });

            modelBuilder.Entity("supermasks.Models.HolidayMaster", b =>
                {
                    b.Property<long>("Holidayid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("holidayid");

                    b.Property<DateTime>("Hdate")
                        .HasColumnName("hdate")
                        .HasColumnType("datetime");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Holidayid");

                    b.ToTable("holiday_master");
                });

            modelBuilder.Entity("supermasks.Models.ImageProds", b =>
                {
                    b.Property<long>("Imageid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("imageid");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Imgname")
                        .HasColumnName("imgname")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<long?>("Prodid")
                        .HasColumnName("prodid");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<long?>("Userid")
                        .HasColumnName("userid");

                    b.HasKey("Imageid");

                    b.HasIndex("Prodid")
                        .HasName("pk_ip_prodid");

                    b.ToTable("Image_prods");
                });

            modelBuilder.Entity("supermasks.Models.LogDetails", b =>
                {
                    b.Property<long>("Actionid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("actionid");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("Id")
                        .HasColumnName("ID");

                    b.Property<long?>("Logtypeid")
                        .HasColumnName("logtypeid");

                    b.Property<long?>("Prodid")
                        .HasColumnName("prodid");

                    b.Property<long?>("Siteid")
                        .HasColumnName("siteid");

                    b.Property<long?>("Userid")
                        .HasColumnName("userid");

                    b.HasKey("Actionid");

                    b.ToTable("log_details");
                });

            modelBuilder.Entity("supermasks.Models.LogtypeMaster", b =>
                {
                    b.Property<long>("Logtypeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("logtypeid");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Logtype")
                        .HasColumnName("logtype")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<byte?>("Rpt")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("rpt")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Tbl")
                        .HasColumnName("tbl")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Logtypeid");

                    b.ToTable("logtype_master");
                });

            modelBuilder.Entity("supermasks.Models.MessageDetails", b =>
                {
                    b.Property<long>("Msgid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("msgid");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Message")
                        .HasColumnName("message")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<long?>("Siteid")
                        .HasColumnName("siteid");

                    b.HasKey("Msgid");

                    b.HasIndex("Email")
                        .HasName("pk_email");

                    b.HasIndex("Siteid")
                        .HasName("pk_siteid");

                    b.ToTable("message_details");
                });

            modelBuilder.Entity("supermasks.Models.ModuleMaster", b =>
                {
                    b.Property<long>("Moduleid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("moduleid");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Frmname")
                        .HasColumnName("frmname")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Menu")
                        .HasColumnName("menu")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Mname")
                        .HasColumnName("mname")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<long?>("Morder")
                        .HasColumnName("morder");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Moduleid");

                    b.ToTable("module_master");
                });

            modelBuilder.Entity("supermasks.Models.OfferDetails", b =>
                {
                    b.Property<long>("Offerid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("offerid");

                    b.Property<long?>("Discount")
                        .HasColumnName("discount");

                    b.Property<DateTime?>("Edate")
                        .HasColumnName("edate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("Sdate")
                        .HasColumnName("sdate")
                        .HasColumnType("datetime");

                    b.Property<long?>("Siteid")
                        .HasColumnName("siteid");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Offerid");

                    b.ToTable("offer_details");
                });

            modelBuilder.Entity("supermasks.Models.PageDetails", b =>
                {
                    b.Property<long>("Pagecatid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pagecatid");

                    b.Property<long?>("Catcode")
                        .HasColumnName("catcode");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<long?>("Pageid")
                        .HasColumnName("pageid");

                    b.Property<long?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Pagecatid");

                    b.ToTable("page_details");
                });

            modelBuilder.Entity("supermasks.Models.PageMaster", b =>
                {
                    b.Property<long>("Pageid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pageid");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("H1txt")
                        .HasColumnName("h1txt")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("H2txt")
                        .HasColumnName("h2txt")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Headimg")
                        .HasColumnName("headimg")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Metadesc")
                        .HasColumnName("metadesc")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Metakey")
                        .HasColumnName("metakey")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Pagename")
                        .HasColumnName("pagename")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Seobot")
                        .HasColumnName("seobot")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Seotop")
                        .HasColumnName("seotop")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<long?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Url")
                        .HasColumnName("url")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Pageid");

                    b.ToTable("page_master");
                });

            modelBuilder.Entity("supermasks.Models.PostageMaster", b =>
                {
                    b.Property<long>("Postageid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("postageid");

                    b.Property<decimal?>("Amount")
                        .HasColumnName("amount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("Edays")
                        .HasColumnName("edays");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<byte?>("Isdiscount")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isdiscount")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("Iseu")
                        .HasColumnName("iseu");

                    b.Property<byte?>("Isimp")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isimp")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("Isnd")
                        .HasColumnName("isnd");

                    b.Property<int?>("Issd")
                        .HasColumnName("issd");

                    b.Property<int?>("Issignature")
                        .HasColumnName("issignature");

                    b.Property<int?>("Isww")
                        .HasColumnName("isww");

                    b.Property<string>("Message")
                        .HasColumnName("message")
                        .HasColumnType("text");

                    b.Property<string>("Method")
                        .HasColumnName("method")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Mobile")
                        .HasColumnName("mobile")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Mtype")
                        .HasColumnName("mtype")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<decimal?>("Pamount")
                        .HasColumnName("pamount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("Porder")
                        .HasColumnName("porder");

                    b.Property<int?>("Sdays")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sdays")
                        .HasDefaultValueSql("((3))");

                    b.Property<long?>("Siteid")
                        .HasColumnName("siteid");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("Telesale")
                        .HasColumnName("telesale");

                    b.HasKey("Postageid");

                    b.ToTable("postage_master");
                });

            modelBuilder.Entity("supermasks.Models.PresaleCustomerDetails", b =>
                {
                    b.Property<long>("Custaddid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("custaddid");

                    b.Property<string>("Add1")
                        .HasColumnName("add1")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Add2")
                        .HasColumnName("add2")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("City")
                        .HasColumnName("city")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Orderid")
                        .HasColumnName("orderid")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Pcode")
                        .HasColumnName("pcode")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Custaddid");

                    b.ToTable("presale_customer_details");
                });

            modelBuilder.Entity("supermasks.Models.PresaleDetails", b =>
                {
                    b.Property<long>("Presaleid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("presaleid");

                    b.Property<decimal?>("Amount")
                        .HasColumnName("amount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Bsession")
                        .HasColumnName("bsession")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Code")
                        .HasColumnName("code")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Curcode")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("curcode")
                        .HasDefaultValueSql("('GBP')")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("Custadd")
                        .HasColumnName("custadd")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Custemail")
                        .HasColumnName("custemail")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<long?>("Custid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("custid")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Custphone")
                        .HasColumnName("custphone")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Deladd")
                        .HasColumnName("deladd")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<long?>("Deviceid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("deviceid")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("Discount")
                        .HasColumnName("discount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Discountcode")
                        .HasColumnName("discountcode")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<decimal?>("Donation")
                        .HasColumnName("donation")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<byte?>("Istele")
                        .HasColumnName("istele");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Orderid")
                        .HasColumnName("orderid")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<decimal?>("Postage")
                        .HasColumnName("postage")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<long?>("Postageid")
                        .HasColumnName("postageid");

                    b.Property<string>("Ptype")
                        .HasColumnName("ptype")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<long?>("Siteid")
                        .HasColumnName("siteid");

                    b.Property<decimal?>("Vat")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("vat")
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Presaleid");

                    b.HasIndex("Bsession")
                        .HasName("pk_pd_session");

                    b.HasIndex("Orderid")
                        .HasName("pk_pd_orderid");

                    b.HasIndex("Postageid");

                    b.ToTable("presale_details");
                });

            modelBuilder.Entity("supermasks.Models.PricelistLogs", b =>
                {
                    b.Property<long>("Logid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("logid");

                    b.Property<string>("Barcode")
                        .HasColumnName("barcode")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<double?>("Lfcost")
                        .HasColumnName("lfcost");

                    b.Property<double?>("Lrcost")
                        .HasColumnName("lrcost");

                    b.Property<string>("Minorder")
                        .HasColumnName("minorder")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Nbarcode")
                        .HasColumnName("nbarcode")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<double?>("Nfcost")
                        .HasColumnName("nfcost");

                    b.Property<string>("Nminorder")
                        .HasColumnName("nminorder")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<double?>("Nrcost")
                        .HasColumnName("nrcost");

                    b.Property<string>("Prodcode")
                        .HasColumnName("prodcode")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<long?>("Spid")
                        .HasColumnName("spid");

                    b.Property<long?>("Updated")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("updated")
                        .HasDefaultValueSql("((0))");

                    b.Property<long?>("Userid")
                        .HasColumnName("userid");

                    b.HasKey("Logid");

                    b.ToTable("pricelist_logs");
                });

            modelBuilder.Entity("supermasks.Models.PrintMaster", b =>
                {
                    b.Property<long>("Printid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("printid");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("Porder")
                        .HasColumnName("porder");

                    b.Property<string>("Printname")
                        .HasColumnName("printname")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Rptcode")
                        .HasColumnName("rptcode")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Usp")
                        .HasColumnName("usp")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Printid");

                    b.ToTable("print_master");
                });

            modelBuilder.Entity("supermasks.Models.PrintReports", b =>
                {
                    b.Property<long>("Rptid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("rptid");

                    b.Property<string>("Altprodcode")
                        .HasColumnName("altprodcode")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Altsupp")
                        .HasColumnName("altsupp")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<long?>("Catcode")
                        .HasColumnName("catcode");

                    b.Property<long?>("Cnt")
                        .HasColumnName("cnt");

                    b.Property<decimal?>("Cost")
                        .HasColumnName("cost")
                        .HasColumnType("decimal(9, 2)");

                    b.Property<decimal?>("Crprice")
                        .HasColumnName("crprice")
                        .HasColumnType("decimal(9, 2)");

                    b.Property<long?>("Empid")
                        .HasColumnName("empid");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<byte?>("Isbest")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isbest")
                        .HasDefaultValueSql("((0))");

                    b.Property<byte?>("Online")
                        .HasColumnName("online");

                    b.Property<string>("Page")
                        .HasColumnName("page")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal?>("Price")
                        .HasColumnName("price")
                        .HasColumnType("decimal(9, 2)");

                    b.Property<string>("Prodcode")
                        .HasColumnName("prodcode")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<long?>("Prodid")
                        .HasColumnName("prodid");

                    b.Property<string>("Prodname")
                        .HasColumnName("prodname")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Prodsize")
                        .HasColumnName("prodsize")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Reorder")
                        .HasColumnName("reorder")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<byte?>("Roid")
                        .HasColumnName("roid");

                    b.Property<decimal?>("Sprice")
                        .HasColumnName("sprice")
                        .HasColumnType("decimal(9, 2)");

                    b.Property<long?>("Suppid")
                        .HasColumnName("suppid");

                    b.Property<string>("Supplier")
                        .HasColumnName("supplier")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<long?>("Tierid")
                        .HasColumnName("tierid");

                    b.Property<string>("Unit")
                        .HasColumnName("unit")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal?>("Webprice")
                        .HasColumnName("webprice")
                        .HasColumnType("decimal(9, 2)");

                    b.HasKey("Rptid");

                    b.ToTable("print_reports");
                });

            modelBuilder.Entity("supermasks.Models.ProductLogs", b =>
                {
                    b.Property<long>("Prodlogid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("prodlogid");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("Prodid")
                        .HasColumnName("prodid");

                    b.Property<long?>("Userid")
                        .HasColumnName("userid");

                    b.HasKey("Prodlogid");

                    b.HasIndex("Prodid")
                        .HasName("pk_logs_prodid");

                    b.HasIndex("Userid")
                        .HasName("pk_logs_uid");

                    b.ToTable("product_logs");
                });

            modelBuilder.Entity("supermasks.Models.ProductMaster", b =>
                {
                    b.Property<long>("Prodid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("prodid");

                    b.Property<byte?>("Btype")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("btype")
                        .HasDefaultValueSql("((0))");

                    b.Property<long?>("Catcode")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("catcode")
                        .HasDefaultValueSql("((0))");

                    b.Property<long?>("Colorid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("colorid")
                        .HasDefaultValueSql("((1))");

                    b.Property<long?>("Cqty")
                        .HasColumnName("cqty");

                    b.Property<decimal?>("Crprice")
                        .HasColumnName("crprice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Delivery")
                        .HasColumnName("delivery")
                        .HasMaxLength(1000);

                    b.Property<string>("Descr")
                        .HasColumnName("descr")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Esize")
                        .HasColumnName("esize")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Fbdes")
                        .HasColumnName("fbdes")
                        .HasMaxLength(1000);

                    b.Property<string>("Img")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("img")
                        .HasDefaultValueSql("('NO-PICTURE-AVAILABLE.JPG')")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<byte?>("Isballoon")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isballoon")
                        .HasDefaultValueSql("((0))");

                    b.Property<byte?>("Iscap")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iscap")
                        .HasDefaultValueSql("((0))");

                    b.Property<byte?>("Ischange")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ischange")
                        .HasDefaultValueSql("((0))");

                    b.Property<byte?>("Isonline")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isonline")
                        .HasDefaultValueSql("((0))");

                    b.Property<byte?>("Isreduced")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isreduced")
                        .HasDefaultValueSql("((0))");

                    b.Property<long?>("Isshop")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isshop")
                        .HasDefaultValueSql("((1))");

                    b.Property<byte?>("Isstock")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isstock")
                        .HasDefaultValueSql("((0))");

                    b.Property<byte?>("Isxl")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isxl")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Keywords")
                        .HasColumnName("keywords")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<long?>("Maxqty")
                        .HasColumnName("maxqty");

                    b.Property<string>("Mdes")
                        .HasColumnName("mdes")
                        .HasMaxLength(1000);

                    b.Property<string>("Mdesc")
                        .HasColumnName("mdesc")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<long?>("Minqty")
                        .HasColumnName("minqty");

                    b.Property<string>("Mkeys")
                        .HasColumnName("mkeys")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<long?>("Mprodid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("mprodid")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Notes")
                        .HasColumnName("notes")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<decimal?>("Oprice")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("oprice")
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Pndes")
                        .HasColumnName("pndes")
                        .HasMaxLength(1000);

                    b.Property<decimal?>("Price")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("price")
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Prodcode")
                        .HasColumnName("prodcode")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Pssdes")
                        .HasColumnName("pssdes")
                        .HasMaxLength(1000);

                    b.Property<byte?>("Ptid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ptid")
                        .HasDefaultValueSql("((4))");

                    b.Property<string>("Ptitle")
                        .HasColumnName("ptitle")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<decimal?>("Rrprice")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("rrprice")
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("Rwprice")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("rwprice")
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValueSql("((0))");

                    b.Property<long?>("Sizeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sizeid")
                        .HasDefaultValueSql("((1000000))");

                    b.Property<byte?>("Soffer")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("soffer")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Specification")
                        .HasColumnName("specification")
                        .HasMaxLength(1000);

                    b.Property<decimal?>("Sprice")
                        .HasColumnName("sprice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<long?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<long?>("Tierid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tierid")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Url")
                        .HasColumnName("url")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<long?>("Volume")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("volume")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Wdes")
                        .HasColumnName("wdes")
                        .HasMaxLength(1000);

                    b.Property<decimal?>("Webprice")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("webprice")
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValueSql("((0))");

                    b.Property<byte?>("Wsale")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("wsale")
                        .HasDefaultValueSql("((0))");

                    b.Property<byte?>("Zerovat")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("zerovat")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Prodid");

                    b.HasIndex("Catcode")
                        .HasName("pk_catcode");

                    b.HasIndex("Descr")
                        .HasName("pk_pd_descr");

                    b.HasIndex("Isonline")
                        .HasName("pk_isonline");

                    b.HasIndex("Isshop")
                        .HasName("pk_isshop");

                    b.HasIndex("Isstock")
                        .HasName("pk_isstock");

                    b.HasIndex("Mprodid")
                        .HasName("pk_mprodid");

                    b.HasIndex("Name")
                        .HasName("pk_pd_name");

                    b.HasIndex("Price")
                        .HasName("pk_price");

                    b.HasIndex("Tierid")
                        .HasName("pk_tierid");

                    b.HasIndex("Url")
                        .HasName("pk_url");

                    b.HasIndex("Webprice")
                        .HasName("pk_webprice");

                    b.ToTable("product_master");
                });

            modelBuilder.Entity("supermasks.Models.PromotionMaster", b =>
                {
                    b.Property<long>("Dcid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dcid");

                    b.Property<double?>("Amount")
                        .HasColumnName("amount");

                    b.Property<string>("Code")
                        .HasColumnName("code")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<double?>("Discount")
                        .HasColumnName("discount");

                    b.Property<long?>("Dtypeid")
                        .HasColumnName("dtypeid");

                    b.Property<DateTime?>("Enddate")
                        .HasColumnName("enddate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Img")
                        .HasColumnName("img")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<long?>("Postageid")
                        .HasColumnName("postageid");

                    b.Property<long?>("Siteid")
                        .HasColumnName("siteid");

                    b.Property<DateTime?>("Startdate")
                        .HasColumnName("startdate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Dcid");

                    b.HasIndex("Dtypeid");

                    b.ToTable("promotion_master");
                });

            modelBuilder.Entity("supermasks.Models.PtierMaster", b =>
                {
                    b.Property<long>("Ptid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ptid");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Pname")
                        .HasColumnName("pname")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Ptid");

                    b.ToTable("ptier_master");
                });

            modelBuilder.Entity("supermasks.Models.Rbaskets", b =>
                {
                    b.Property<long>("Rbid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("rbid");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("InfoId")
                        .HasColumnName("infoID");

                    b.Property<byte?>("Isvat")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isvat")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("Price")
                        .HasColumnName("price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<long?>("Prodid")
                        .HasColumnName("prodid");

                    b.Property<int?>("Qty")
                        .HasColumnName("qty");

                    b.Property<long?>("Saleid")
                        .HasColumnName("saleid");

                    b.Property<string>("Sitecode")
                        .HasColumnName("sitecode")
                        .HasColumnType("nchar(10)");

                    b.Property<long?>("Siteid")
                        .HasColumnName("siteid");

                    b.Property<long?>("Sizeid")
                        .HasColumnName("sizeid");

                    b.Property<long?>("Userid")
                        .HasColumnName("userid");

                    b.HasKey("Rbid");

                    b.ToTable("rbaskets");
                });

            modelBuilder.Entity("supermasks.Models.RecentprodsDetails", b =>
                {
                    b.Property<long>("Recentid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("recentid");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("Prodid")
                        .HasColumnName("prodid");

                    b.Property<string>("Sessionid")
                        .HasColumnName("sessionid")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Recentid");

                    b.HasIndex("Prodid")
                        .HasName("pk_rp_prodid");

                    b.HasIndex("Sessionid")
                        .HasName("pk_rp_session");

                    b.ToTable("recentprods_details");
                });

            modelBuilder.Entity("supermasks.Models.RelatedProds", b =>
                {
                    b.Property<long>("Relid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("relid");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("Prodid")
                        .HasColumnName("prodid");

                    b.Property<long?>("Rprodid")
                        .HasColumnName("rprodid");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<long?>("Userid")
                        .HasColumnName("userid");

                    b.HasKey("Relid");

                    b.HasIndex("Prodid")
                        .HasName("pk_prodid");

                    b.HasIndex("Rprodid")
                        .HasName("pk_rprodid");

                    b.ToTable("related_prods");
                });

            modelBuilder.Entity("supermasks.Models.ReorderDetails", b =>
                {
                    b.Property<long>("Roid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("roid");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<byte?>("Rorder")
                        .HasColumnName("rorder");

                    b.Property<byte?>("Sorder")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sorder")
                        .HasDefaultValueSql("((0))");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Roid");

                    b.ToTable("reorder_details");
                });

            modelBuilder.Entity("supermasks.Models.RoleMaster", b =>
                {
                    b.Property<long>("Roleid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("roleid");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("Isshop")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isshop")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("Issuper")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("issuper")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Note")
                        .HasColumnName("note")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Role")
                        .HasColumnName("role")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<long?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Roleid");

                    b.ToTable("role_master");
                });

            modelBuilder.Entity("supermasks.Models.RoleModule", b =>
                {
                    b.Property<long>("Rmid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("rmid");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("Moduleid")
                        .HasColumnName("moduleid");

                    b.Property<long?>("Roleid")
                        .HasColumnName("roleid");

                    b.Property<byte?>("Roletype")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("roletype")
                        .HasDefaultValueSql("((0))");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Rmid");

                    b.ToTable("role_module");
                });

            modelBuilder.Entity("supermasks.Models.RscsaleReport", b =>
                {
                    b.Property<long>("Rptid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("rptid");

                    b.Property<long?>("Empid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("empid")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("Entrydatetime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydatetime")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("Prodid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("prodid")
                        .HasDefaultValueSql("((0))");

                    b.Property<long?>("Store")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("store")
                        .HasDefaultValueSql("((0))");

                    b.Property<long?>("Trade")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("trade")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Rptid");

                    b.HasIndex("Empid")
                        .HasName("pk_empid_rsc");

                    b.HasIndex("Prodid")
                        .HasName("pk_prodid_rsc");

                    b.ToTable("rscsale_report");
                });

            modelBuilder.Entity("supermasks.Models.SaleonlineMaster", b =>
                {
                    b.Property<long>("Saleonlineid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("saleonlineid");

                    b.Property<string>("Saleonline")
                        .HasColumnName("saleonline")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Saleonlineid");

                    b.ToTable("saleonline_master");
                });

            modelBuilder.Entity("supermasks.Models.SalesDetails", b =>
                {
                    b.Property<int>("Saleid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("saleid");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("InfoId")
                        .HasColumnName("infoID");

                    b.Property<byte?>("Isvat")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isvat")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("Price")
                        .HasColumnName("price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<long?>("Prodid")
                        .HasColumnName("prodid");

                    b.Property<int?>("Qty")
                        .HasColumnName("qty");

                    b.Property<string>("Sitecode")
                        .HasColumnName("sitecode")
                        .HasColumnType("nchar(10)");

                    b.Property<long?>("Siteid")
                        .HasColumnName("siteid");

                    b.Property<long?>("Sizeid")
                        .HasColumnName("sizeid");

                    b.HasKey("Saleid");

                    b.HasIndex("InfoId")
                        .HasName("pk_sd_infoid");

                    b.HasIndex("Prodid")
                        .HasName("pk_prodid");

                    b.HasIndex("Siteid")
                        .HasName("pk_siteid");

                    b.ToTable("sales_details");
                });

            modelBuilder.Entity("supermasks.Models.SalesinfoDetails", b =>
                {
                    b.Property<long>("Sinfoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sinfoid");

                    b.Property<string>("Billing")
                        .HasColumnName("billing")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Delivery")
                        .HasColumnName("delivery")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("InfoId")
                        .HasColumnName("infoID");

                    b.Property<long?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Tel")
                        .HasColumnName("tel")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Sinfoid");

                    b.HasIndex("InfoId")
                        .HasName("pk_sid_infoid");

                    b.ToTable("salesinfo_details");
                });

            modelBuilder.Entity("supermasks.Models.SaleslogDetails", b =>
                {
                    b.Property<long>("Slogind")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("slogind");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasColumnName("info")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<long?>("Infoid")
                        .HasColumnName("infoid");

                    b.Property<long?>("Siteid")
                        .HasColumnName("siteid");

                    b.HasKey("Slogind");

                    b.ToTable("saleslog_details");
                });

            modelBuilder.Entity("supermasks.Models.SalesMaster", b =>
                {
                    b.Property<long>("Infoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("infoid");

                    b.Property<decimal?>("Amount")
                        .HasColumnName("amount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Curcode")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("curcode")
                        .HasDefaultValueSql("('GBP')")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<long?>("Custid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("custid")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Deltype")
                        .HasColumnName("deltype")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<long?>("Deviceid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("deviceid")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("Discount")
                        .HasColumnName("discount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Discountcode")
                        .HasColumnName("discountcode")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<decimal?>("Donation")
                        .HasColumnName("donation")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Info")
                        .HasColumnName("info")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<byte?>("Isprint")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isprint")
                        .HasDefaultValueSql("((0))");

                    b.Property<byte?>("Isremoved")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isremoved")
                        .HasDefaultValueSql("((0))");

                    b.Property<byte?>("Istele")
                        .HasColumnName("istele");

                    b.Property<string>("Orderid")
                        .HasColumnName("orderid")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Paypalid")
                        .HasColumnName("paypalid")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Paytype")
                        .HasColumnName("paytype")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Pcode")
                        .HasColumnName("pcode")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<decimal?>("Postage")
                        .HasColumnName("postage")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<long?>("Postageid")
                        .HasColumnName("postageid");

                    b.Property<long?>("Qty")
                        .HasColumnName("qty");

                    b.Property<string>("Sitecode")
                        .HasColumnName("sitecode")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<long?>("Siteid")
                        .HasColumnName("siteid");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<long?>("Userid")
                        .HasColumnName("userid");

                    b.Property<decimal?>("Vat")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("vat")
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Infoid");

                    b.HasIndex("Entrydate")
                        .HasName("pk_sm_entrydate");

                    b.HasIndex("Orderid")
                        .HasName("pk_orderid");

                    b.HasIndex("Sitecode")
                        .HasName("pk_sitecode");

                    b.HasIndex("Siteid")
                        .HasName("pk_sm_siteid");

                    b.ToTable("sales_master");
                });

            modelBuilder.Entity("supermasks.Models.SearchResults", b =>
                {
                    b.Property<long>("Srid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("srid");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("Prodid")
                        .HasColumnName("prodid");

                    b.Property<long?>("Sid")
                        .HasColumnName("sid");

                    b.Property<long?>("Srank")
                        .HasColumnName("srank");

                    b.Property<long?>("Userid")
                        .HasColumnName("userid");

                    b.HasKey("Srid");

                    b.ToTable("search_results");
                });

            modelBuilder.Entity("supermasks.Models.SeoDetails", b =>
                {
                    b.Property<long>("Seoid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("seoid");

                    b.Property<string>("Breadcrumb")
                        .HasColumnName("breadcrumb")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<decimal>("Catcode")
                        .HasColumnName("catcode")
                        .HasColumnType("numeric(10, 0)");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<string>("Description2")
                        .HasColumnName("description2")
                        .HasColumnType("text");

                    b.Property<string>("Header")
                        .HasColumnName("header")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Header2")
                        .HasColumnName("header2")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<byte?>("Islive")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("islive")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Keywords")
                        .HasColumnName("keywords")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Metadesc")
                        .HasColumnName("metadesc")
                        .HasColumnType("text");

                    b.Property<string>("Metakeys")
                        .HasColumnName("metakeys")
                        .HasColumnType("text");

                    b.Property<long?>("Siteid")
                        .HasColumnName("siteid");

                    b.Property<string>("Title")
                        .HasColumnName("title")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Seoid");

                    b.HasIndex("Catcode")
                        .HasName("pk_sd_catcode");

                    b.HasIndex("Siteid")
                        .HasName("pk_sd_siteid");

                    b.ToTable("seo_details");
                });

            modelBuilder.Entity("supermasks.Models.SiteMaster", b =>
                {
                    b.Property<long>("Siteid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("siteid");

                    b.Property<string>("Add1")
                        .HasColumnName("add1")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Add2")
                        .HasColumnName("add2")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Dbname")
                        .HasColumnName("dbname")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Imgfolder")
                        .HasColumnName("imgfolder")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<byte?>("Isonline")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isonline")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Maintitle")
                        .HasColumnName("maintitle")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Metadesc")
                        .HasColumnName("metadesc")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Metakeys")
                        .HasColumnName("metakeys")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<long?>("Order")
                        .HasColumnName("order");

                    b.Property<string>("Paypalemail")
                        .HasColumnName("paypalemail")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Phone")
                        .HasColumnName("phone")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<byte?>("Priceid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("priceid")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Realcode")
                        .HasColumnName("realcode")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Realmoto")
                        .HasColumnName("realmoto")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Servername")
                        .HasColumnName("servername")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Sitecode")
                        .HasColumnName("sitecode")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("Sitedescription")
                        .HasColumnName("sitedescription")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("Sitename")
                        .HasColumnName("sitename")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Ssite")
                        .HasColumnName("ssite")
                        .HasMaxLength(15);

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Website")
                        .HasColumnName("website")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Siteid");

                    b.ToTable("site_master");
                });

            modelBuilder.Entity("supermasks.Models.SizeMaster", b =>
                {
                    b.Property<long>("Specid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("specid");

                    b.Property<long>("Code")
                        .HasColumnName("code");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Longname")
                        .HasColumnName("longname")
                        .HasMaxLength(154)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Sname")
                        .HasColumnName("sname")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Specid");

                    b.ToTable("size_master");
                });

            modelBuilder.Entity("supermasks.Models.StatsMaster", b =>
                {
                    b.Property<long>("Statid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("statid");

                    b.Property<string>("Rfrom")
                        .HasColumnName("rfrom")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<long?>("Rorder")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("rorder")
                        .HasDefaultValueSql("((0))");

                    b.Property<byte?>("Rtype")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("rtype")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Statname")
                        .HasColumnName("statname")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Usp")
                        .HasColumnName("usp")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Statid");

                    b.ToTable("stats_master");
                });

            modelBuilder.Entity("supermasks.Models.StockDetails", b =>
                {
                    b.Property<long>("Stockid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("stockid");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("Prodid")
                        .HasColumnName("prodid");

                    b.Property<long?>("Qty")
                        .HasColumnName("qty");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<long?>("Userid")
                        .HasColumnName("userid");

                    b.HasKey("Stockid");

                    b.ToTable("stock_details");
                });

            modelBuilder.Entity("supermasks.Models.StockProds", b =>
                {
                    b.Property<long>("Stockid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("stockid");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<byte?>("Locked")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("locked")
                        .HasDefaultValueSql("((0))");

                    b.Property<long>("Prodid")
                        .HasColumnName("prodid");

                    b.Property<long?>("Store")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("store")
                        .HasDefaultValueSql("((0))");

                    b.Property<long?>("Trade")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("trade")
                        .HasDefaultValueSql("((0))");

                    b.Property<long?>("Userid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("userid")
                        .HasDefaultValueSql("((0))");

                    b.Property<double?>("Val")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("val")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Stockid");

                    b.HasIndex("Prodid")
                        .HasName("pk_prodid");

                    b.ToTable("stock_prods");
                });

            modelBuilder.Entity("supermasks.Models.StocktakeCats", b =>
                {
                    b.Property<int>("Catid")
                        .HasColumnName("catid");

                    b.Property<int?>("Done")
                        .HasColumnName("done");

                    b.Property<DateTime?>("Lastaction")
                        .HasColumnName("lastaction")
                        .HasColumnType("datetime");

                    b.Property<int?>("Locked")
                        .HasColumnName("locked");

                    b.Property<string>("Owner")
                        .HasColumnName("owner")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.HasKey("Catid");

                    b.ToTable("stocktake_cats");
                });

            modelBuilder.Entity("supermasks.Models.StocktakeDetails", b =>
                {
                    b.Property<long>("Rptid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("rptid");

                    b.Property<long?>("Catcode")
                        .HasColumnName("catcode");

                    b.Property<long?>("Empid")
                        .HasColumnName("empid");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("Ncode")
                        .HasColumnName("ncode");

                    b.Property<long?>("Qty")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("qty")
                        .HasDefaultValueSql("((0))");

                    b.Property<long?>("Qtylast")
                        .HasColumnName("qtylast");

                    b.Property<double?>("Val")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("val")
                        .HasDefaultValueSql("((0))");

                    b.Property<double?>("Vallast")
                        .HasColumnName("vallast");

                    b.HasKey("Rptid");

                    b.ToTable("stocktake_details");
                });

            modelBuilder.Entity("supermasks.Models.SupplierMaster", b =>
                {
                    b.Property<long>("Sid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sid");

                    b.Property<string>("Address")
                        .HasColumnName("address")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Contact")
                        .HasColumnName("contact")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<decimal?>("Cpaid")
                        .HasColumnName("cpaid")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Mdetails")
                        .HasColumnName("mdetails")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<decimal?>("Multiplier")
                        .HasColumnName("multiplier")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("Note")
                        .HasColumnName("note")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Oldname")
                        .HasColumnName("oldname")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Pass")
                        .HasColumnName("pass")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Phone")
                        .HasColumnName("phone")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Scontact")
                        .HasColumnName("scontact")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Sfax")
                        .HasColumnName("sfax")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Site")
                        .HasColumnName("site")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Sphone")
                        .HasColumnName("sphone")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Userid")
                        .HasColumnName("userid")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Sid");

                    b.ToTable("supplier_master");
                });

            modelBuilder.Entity("supermasks.Models.SupplyprodDetails", b =>
                {
                    b.Property<long>("Spid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("spid");

                    b.Property<string>("Barcode")
                        .HasColumnName("barcode")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal?>("Cost")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cost")
                        .HasColumnType("decimal(9, 2)")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<byte?>("Isbarcode")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isbarcode")
                        .HasDefaultValueSql("((0))");

                    b.Property<byte?>("Isbest")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isbest")
                        .HasDefaultValueSql("((0))");

                    b.Property<byte?>("Ischange")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ischange")
                        .HasDefaultValueSql("((0))");

                    b.Property<byte?>("Isdead")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("isdead")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Issue")
                        .HasColumnName("issue")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Minorder")
                        .HasColumnName("minorder")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Note")
                        .HasColumnName("note")
                        .HasColumnType("text");

                    b.Property<string>("Pagenr")
                        .HasColumnName("pagenr")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Prodcode")
                        .HasColumnName("prodcode")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<long?>("Prodid")
                        .HasColumnName("prodid");

                    b.Property<decimal?>("Rawcost")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("rawcost")
                        .HasColumnType("decimal(9, 2)")
                        .HasDefaultValueSql("((0))");

                    b.Property<long?>("Roid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("roid")
                        .HasDefaultValueSql("((1))");

                    b.Property<long?>("Sid")
                        .HasColumnName("sid");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Spid");

                    b.HasIndex("Barcode")
                        .HasName("pk_barcode");

                    b.HasIndex("Cost")
                        .HasName("pk_cost");

                    b.HasIndex("Isbest")
                        .HasName("pk_isbest");

                    b.HasIndex("Prodcode")
                        .HasName("sk_prodcode");

                    b.HasIndex("Prodid")
                        .HasName("sk_prodid");

                    b.ToTable("supplyprod_details");
                });

            modelBuilder.Entity("supermasks.Models.TermsDetails", b =>
                {
                    b.Property<long>("Termid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("termid");

                    b.Property<string>("Deliveries")
                        .HasColumnName("deliveries")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nondelivery")
                        .HasColumnName("nondelivery")
                        .HasColumnType("text");

                    b.Property<string>("Payment")
                        .HasColumnName("payment")
                        .HasColumnType("text");

                    b.Property<string>("Pricing")
                        .HasColumnName("pricing")
                        .HasColumnType("text");

                    b.Property<string>("Privacy")
                        .HasColumnName("privacy")
                        .HasColumnType("text");

                    b.Property<string>("Products")
                        .HasColumnName("products")
                        .HasColumnType("text");

                    b.Property<string>("Returntxt")
                        .HasColumnName("returntxt")
                        .HasColumnType("text");

                    b.Property<long?>("Siteid")
                        .HasColumnName("siteid");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Termid");

                    b.ToTable("terms_details");
                });

            modelBuilder.Entity("supermasks.Models.TermsMaster", b =>
                {
                    b.Property<long>("Termid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("termid");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Returnpol")
                        .HasColumnName("returnpol")
                        .HasColumnType("text");

                    b.Property<long?>("Siteid")
                        .HasColumnName("siteid");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Termsbot")
                        .HasColumnName("termsbot")
                        .HasColumnType("text");

                    b.Property<string>("Termstop")
                        .HasColumnName("termstop")
                        .HasColumnType("text");

                    b.HasKey("Termid");

                    b.ToTable("terms_master");
                });

            modelBuilder.Entity("supermasks.Models.TierMaster", b =>
                {
                    b.Property<long>("Tierid")
                        .ValueGeneratedOnAdd();

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Tier")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Tierid");

                    b.ToTable("tier_master");
                });

            modelBuilder.Entity("supermasks.Models.TypeMaster", b =>
                {
                    b.Property<long>("Itid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("itid");

                    b.Property<byte?>("Flag")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("flag")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Itcode")
                        .HasColumnName("itcode")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("Ittype")
                        .HasColumnName("ittype")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Itid");

                    b.ToTable("type_master");
                });

            modelBuilder.Entity("supermasks.Models.UrlDetails", b =>
                {
                    b.Property<long>("Urlid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("urlid");

                    b.Property<long?>("Catcode")
                        .HasColumnName("catcode");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("Lvl")
                        .HasColumnName("lvl");

                    b.Property<long?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Url")
                        .HasColumnName("url")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Urlid");

                    b.HasIndex("Catcode")
                        .HasName("pk_url_codes");

                    b.HasIndex("Url")
                        .HasName("pk_url");

                    b.ToTable("url_details");
                });

            modelBuilder.Entity("supermasks.Models.UserMaster", b =>
                {
                    b.Property<long>("Userid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("userid");

                    b.Property<long?>("Ecode")
                        .HasColumnName("ecode");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<DateTime>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Epass")
                        .HasColumnName("epass")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Lastonline")
                        .HasColumnName("lastonline")
                        .HasColumnType("datetime");

                    b.Property<byte?>("Pricesite")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("pricesite")
                        .HasDefaultValueSql("((0))");

                    b.Property<long?>("Roleid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("roleid")
                        .HasDefaultValueSql("((6))");

                    b.Property<string>("Sessid")
                        .HasColumnName("sessid")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Username")
                        .HasColumnName("username")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Userpass")
                        .HasColumnName("userpass")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Userid");

                    b.ToTable("user_master");
                });

            modelBuilder.Entity("supermasks.Models.UserSession", b =>
                {
                    b.Property<long>("Sessionid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sessionid");

                    b.Property<byte?>("Iscompleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("iscompleted")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("Logindate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("logindate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("Logoutdate")
                        .HasColumnName("logoutdate")
                        .HasColumnType("datetime");

                    b.Property<string>("Sessiond")
                        .HasColumnName("sessiond")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<long?>("Userid")
                        .HasColumnName("userid");

                    b.HasKey("Sessionid");

                    b.ToTable("user_session");
                });

            modelBuilder.Entity("supermasks.Models.VerificationDetails", b =>
                {
                    b.Property<long>("Verid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("verid");

                    b.Property<string>("Chk")
                        .HasColumnName("chk")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<long?>("Custid")
                        .HasColumnName("custid");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<byte?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("status")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Verid");

                    b.ToTable("verification_details");
                });

            modelBuilder.Entity("supermasks.Models.VoucherDetails", b =>
                {
                    b.Property<long>("Gvid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("gvid");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<byte?>("Redemed")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("redemed")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Terminal")
                        .HasColumnName("terminal")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<long?>("Transactionid")
                        .HasColumnName("transactionid");

                    b.Property<decimal?>("Vamt")
                        .HasColumnName("vamt")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Vcode")
                        .HasColumnName("vcode")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Gvid");

                    b.ToTable("voucher_details");
                });

            modelBuilder.Entity("supermasks.Models.VoucherSession", b =>
                {
                    b.Property<long>("Sid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sid");

                    b.Property<DateTime?>("Entrydate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entrydate")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Sessionid")
                        .HasColumnName("sessionid")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Voucher")
                        .HasColumnName("voucher")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Sid");

                    b.ToTable("voucher_session");
                });

            modelBuilder.Entity("supermasks.Models.PresaleDetails", b =>
                {
                    b.HasOne("supermasks.Models.PostageMaster", "PostageNavigation")
                        .WithMany("PresaleDetails")
                        .HasForeignKey("Postageid")
                        .HasConstraintName("FK_presale_details_postage_master");
                });

            modelBuilder.Entity("supermasks.Models.PromotionMaster", b =>
                {
                    b.HasOne("supermasks.Models.DtypeMaster", "Dtype")
                        .WithMany("PromotionMaster")
                        .HasForeignKey("Dtypeid")
                        .HasConstraintName("FK_promotion_master_dtype_master");
                });

            modelBuilder.Entity("supermasks.Models.SupplyprodDetails", b =>
                {
                    b.HasOne("supermasks.Models.SupplyprodDetails", "Sp")
                        .WithOne("InverseSp")
                        .HasForeignKey("supermasks.Models.SupplyprodDetails", "Spid")
                        .HasConstraintName("FK_supplyprod_details_supplyprod_details");
                });
#pragma warning restore 612, 618
        }
    }
}
